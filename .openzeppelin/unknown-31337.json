{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0xa22e0353aca806bcadb1bc1e34dca681299d494689643efc414c2370ac21769b",
    "deployTransaction": {
      "hash": "0xa22e0353aca806bcadb1bc1e34dca681299d494689643efc414c2370ac21769b",
      "type": 0,
      "accessList": null,
      "blockHash": "0x85a1238b2b6ed163be67e6a9985e29c5d0a04580f21e6d52eb65716400938d61",
      "blockNumber": 2,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x01dcd65000"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xf584edf832f6c27e95acb5d4ae327a786530815e4c68b0797dcde251a3be0744",
      "s": "0x7eccb1779f3455b2f7493cbb5e98e3808dce3593e934ddbd09accedc27c3ceb1",
      "v": 62709,
      "creates": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x82293b4ea8c2764ed142bb98e2485a095161865b6d2e1fc08b5789ffa6e78876",
      "kind": "transparent"
    },
    {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0x820a84ee5d1525ac304bf3459b16810f3dad8eca28675a2a99203f983651e9b2",
      "kind": "transparent"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0xf10ab5c73c734ff269c308d120cb90536b167d75d615139f33b3b790ad9fdd54",
      "kind": "transparent"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x10cdcc6b31aae2b45e922197d35331cb59e49b464cf379c6dd3bd1abbd89696b",
      "kind": "transparent"
    },
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x0304c17f58797028956a552aa4a0d5d50deb435d78199a2e25603e53897f80f2",
      "kind": "transparent"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0xcd094f2e2536264f1f107913c8d4b444f36f560696f03078a1619ae8ce0f4444",
      "kind": "transparent"
    },
    {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0x85f577f45a24baa51dcf242728d8ba7044082994eb949afbb329a131f9a375fe",
      "kind": "transparent"
    },
    {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0xad8e6d90f3fa639854f6ab54389b604692e620fcab4b0cef094871863d25ce69",
      "kind": "transparent"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0x87b4451d9c93810c1d0dc7a6b1ea6a13f9fc575f574b2ca75ca4c5cb8011273e",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x3db43ea98ae22a52f1b9f3b0ceaff6730fba0d0446db378f4e6e26d08e3e2f16",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xa5ca60e27a35e2e04d47acd73586e606cc8e3621bc3e4370599010b543f28f0f",
      "kind": "transparent"
    },
    {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x27a3b22b0b70f7854bbb2cf0158b066b28becf7fa5a58bec6202eacce4c63038",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x5403641989b5842f715052c07a028f8db9dbe67d41d10f1559d1d84bdc14d7d9",
      "kind": "transparent"
    },
    {
      "address": "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      "txHash": "0x3e1db71d2dc9fad87771c0a8464525821bcab5f565668392d220ec04b3e844bb",
      "kind": "transparent"
    },
    {
      "address": "0x99bbA657f2BbC93c02D617f8bA121cB8Fc104Acf",
      "txHash": "0x1e8a757f9b36f51a07da9803f67ea609a2b263baff6309b96fbd0157b6f8956e",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x08de97a14e75f499908fdd0351deb623568f09f9c0fc56197a293935869628a0",
      "kind": "transparent"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x7474837b412001dd672684e268d08bb3fb8d659e0bb124498d34f21960fe3078",
      "kind": "transparent"
    }
  ],
  "impls": {
    "bb606e887e882938f4fc027d6202208b2edf9cbe619348bb56d6729144d9f337": {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x67361c064ec5bc9e0d462b35ae993cf485af498f9729f107d84e4e74e242ed0a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "_orgIds",
            "type": "t_struct(Counter)219_storage",
            "src": "contracts/NFTMinterFactory.sol:11"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "orgInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Org)2329_storage)",
            "src": "contracts/NFTMinterFactory.sol:27"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "nftContractInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2338_storage)",
            "src": "contracts/NFTMinterFactory.sol:28"
          }
        ],
        "types": {
          "t_struct(Counter)219_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Org)2329_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.Org)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Org)2329_storage": {
            "label": "struct NFTMinterFactory.Org",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "issuer",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2338_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.NFTContract)"
          },
          "t_struct(NFTContract)2338_storage": {
            "label": "struct NFTMinterFactory.NFTContract",
            "members": [
              {
                "label": "orgId",
                "type": "t_uint256"
              },
              {
                "label": "tokenName",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f23151eacff3d8f6636281bbb319deb0b68d17f2b783cdb9d6135d7810d191c5": {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0xe4e06bd0b2a0e82f765762ca15bc767faedd7cbc7e2adbd1ac506c00fa569031",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "_orgIds",
            "type": "t_struct(Counter)219_storage",
            "src": "contracts/NFTMinterFactory.sol:11"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "orgInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Org)2328_storage)",
            "src": "contracts/NFTMinterFactory.sol:27"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "nftContractInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2337_storage)",
            "src": "contracts/NFTMinterFactory.sol:28"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "addressOrg",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/NFTMinterFactory.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)219_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Org)2328_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.Org)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Org)2328_storage": {
            "label": "struct NFTMinterFactory.Org",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataURI",
                "type": "t_string_storage"
              },
              {
                "label": "issuer",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2337_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.NFTContract)"
          },
          "t_struct(NFTContract)2337_storage": {
            "label": "struct NFTMinterFactory.NFTContract",
            "members": [
              {
                "label": "orgId",
                "type": "t_uint256"
              },
              {
                "label": "tokenName",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "993eb65ff8979fee43300ed723c7ceba0d20eb39e9c083a3b363dedfc17fefe9": {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0x3909eb6723e69baca50e219e6b78f2af16cf6d45c7a6db5757c8f703fd6b4798",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "_orgIds",
            "type": "t_struct(Counter)219_storage",
            "src": "contracts/NFTMinterFactory.sol:11"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "orgInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Org)2173_storage)",
            "src": "contracts/NFTMinterFactory.sol:27"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "nftContractInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2182_storage)",
            "src": "contracts/NFTMinterFactory.sol:28"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "addressOrg",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/NFTMinterFactory.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)219_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Org)2173_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.Org)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Org)2173_storage": {
            "label": "struct NFTMinterFactory.Org",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_string_storage"
              },
              {
                "label": "issuer",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2182_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.NFTContract)"
          },
          "t_struct(NFTContract)2182_storage": {
            "label": "struct NFTMinterFactory.NFTContract",
            "members": [
              {
                "label": "orgId",
                "type": "t_uint256"
              },
              {
                "label": "tokenName",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a66fa7dc2a388cf6ca81362388f3952a8537fb59c6bf2badbe6e5665b1752189": {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0x0d8383aeb5dc82bb513abed4b7fab64b8bcd81ebf4284fc0a1d8359f315e1f17",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "_orgIds",
            "type": "t_struct(Counter)219_storage",
            "src": "contracts/NFTMinterFactory.sol:11"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "orgInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Org)2213_storage)",
            "src": "contracts/NFTMinterFactory.sol:27"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "nftContractInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2222_storage)",
            "src": "contracts/NFTMinterFactory.sol:28"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "addressOrg",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/NFTMinterFactory.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)219_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Org)2213_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.Org)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Org)2213_storage": {
            "label": "struct NFTMinterFactory.Org",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_string_storage"
              },
              {
                "label": "issuer",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2222_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.NFTContract)"
          },
          "t_struct(NFTContract)2222_storage": {
            "label": "struct NFTMinterFactory.NFTContract",
            "members": [
              {
                "label": "orgId",
                "type": "t_uint256"
              },
              {
                "label": "tokenName",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a2a2b4d85499edca53c34ba413aed6e50b070f6290c4ccb04d8ae9ff8ad72c4c": {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0xd29c10d8092eb61435fe90ddb900de8c2fa2c5984d4311694c05aa4efa7ee044",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "_orgIds",
            "type": "t_struct(Counter)219_storage",
            "src": "contracts/NFTMinterFactory.sol:11"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "orgInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Org)2219_storage)",
            "src": "contracts/NFTMinterFactory.sol:27"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "nftContractInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2228_storage)",
            "src": "contracts/NFTMinterFactory.sol:28"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "addressOrg",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/NFTMinterFactory.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)219_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Org)2219_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.Org)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Org)2219_storage": {
            "label": "struct NFTMinterFactory.Org",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_string_storage"
              },
              {
                "label": "issuer",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2228_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.NFTContract)"
          },
          "t_struct(NFTContract)2228_storage": {
            "label": "struct NFTMinterFactory.NFTContract",
            "members": [
              {
                "label": "orgId",
                "type": "t_uint256"
              },
              {
                "label": "tokenName",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bbe611a9c30a18d527dba7ba7b90160caca0448fc839bf6749c5ce51ca9c10ec": {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0x6d518e74ed55efe8a294a39e46ff18558c0bc40f544b9dafffe6901abb88ad9d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "_orgIds",
            "type": "t_struct(Counter)219_storage",
            "src": "contracts/NFTMinterFactory.sol:11"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "orgInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Org)2328_storage)",
            "src": "contracts/NFTMinterFactory.sol:27"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "nftContractInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2337_storage)",
            "src": "contracts/NFTMinterFactory.sol:28"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "addressOrg",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/NFTMinterFactory.sol:29"
          }
        ],
        "types": {
          "t_struct(Counter)219_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Org)2328_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.Org)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Org)2328_storage": {
            "label": "struct NFTMinterFactory.Org",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_string_storage"
              },
              {
                "label": "issuer",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2337_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.NFTContract)"
          },
          "t_struct(NFTContract)2337_storage": {
            "label": "struct NFTMinterFactory.NFTContract",
            "members": [
              {
                "label": "orgId",
                "type": "t_uint256"
              },
              {
                "label": "tokenName",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "91de33a342c1c4b3c7124986d1dae3f419e90596f66247d126f08d7a9c7b1f29": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x98586a37e55f7273b6c4c1c18fcb15ce7660727afe11eff77bb81509da3b2126",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "_orgIds",
            "type": "t_struct(Counter)219_storage",
            "src": "contracts/NFTMinterFactory.sol:11"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "orgInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Org)2320_storage)",
            "src": "contracts/NFTMinterFactory.sol:27"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "nftContractInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2329_storage)",
            "src": "contracts/NFTMinterFactory.sol:28"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "orgContract",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/NFTMinterFactory.sol:29"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "addressOrg",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/NFTMinterFactory.sol:30"
          }
        ],
        "types": {
          "t_struct(Counter)219_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Org)2320_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.Org)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Org)2320_storage": {
            "label": "struct NFTMinterFactory.Org",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_string_storage"
              },
              {
                "label": "issuer",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2329_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.NFTContract)"
          },
          "t_struct(NFTContract)2329_storage": {
            "label": "struct NFTMinterFactory.NFTContract",
            "members": [
              {
                "label": "orgId",
                "type": "t_uint256"
              },
              {
                "label": "tokenName",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f09db221d31933285bb8b45739d972e2f39cf8421cf1b05539be04524d47f76f": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x85a30d10a652ea5133de938fcff9501e06a129866b253754c48ef3c9521c6e8e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "_orgIds",
            "type": "t_struct(Counter)219_storage",
            "src": "contracts/NFTMinterFactory.sol:11"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "orgInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Org)2320_storage)",
            "src": "contracts/NFTMinterFactory.sol:27"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "nftContractInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2329_storage)",
            "src": "contracts/NFTMinterFactory.sol:28"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "orgContract",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/NFTMinterFactory.sol:29"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "addressOrg",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/NFTMinterFactory.sol:30"
          }
        ],
        "types": {
          "t_struct(Counter)219_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Org)2320_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.Org)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Org)2320_storage": {
            "label": "struct NFTMinterFactory.Org",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_string_storage"
              },
              {
                "label": "issuer",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2329_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.NFTContract)"
          },
          "t_struct(NFTContract)2329_storage": {
            "label": "struct NFTMinterFactory.NFTContract",
            "members": [
              {
                "label": "orgId",
                "type": "t_uint256"
              },
              {
                "label": "tokenName",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "71b28e4da2f1f3cfe1c0efcff76f3d196c8859b18b0ff301122267ff7948b69d": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xfcef4dca22c59146b16d7a4c517d913f549ca76ef939098c4466ffb8136f1ccb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "_orgIds",
            "type": "t_struct(Counter)219_storage",
            "src": "contracts/NFTMinterFactory.sol:11"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "orgInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Org)2346_storage)",
            "src": "contracts/NFTMinterFactory.sol:27"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "nftContractInfo",
            "type": "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2355_storage)",
            "src": "contracts/NFTMinterFactory.sol:28"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "orgContract",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/NFTMinterFactory.sol:29"
          },
          {
            "contract": "NFTMinterFactory",
            "label": "addressOrg",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/NFTMinterFactory.sol:30"
          }
        ],
        "types": {
          "t_struct(Counter)219_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Org)2346_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.Org)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Org)2346_storage": {
            "label": "struct NFTMinterFactory.Org",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "metaDataHash",
                "type": "t_string_storage"
              },
              {
                "label": "issuer",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_string_memory_ptr,t_struct(NFTContract)2355_storage)": {
            "label": "mapping(string => struct NFTMinterFactory.NFTContract)"
          },
          "t_struct(NFTContract)2355_storage": {
            "label": "struct NFTMinterFactory.NFTContract",
            "members": [
              {
                "label": "orgId",
                "type": "t_uint256"
              },
              {
                "label": "tokenName",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "contractAddress",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
